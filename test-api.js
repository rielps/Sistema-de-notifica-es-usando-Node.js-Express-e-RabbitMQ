const axios = require("axios")

const API_URL = "http://localhost:3000"

async function testAPI() {
  console.log("üß™ Iniciando testes da API de Notifica√ß√µes...\n")

  try {
    // Teste 1: Health Check
    console.log("1Ô∏è‚É£ Testando Health Check...")
    const healthResponse = await axios.get(`${API_URL}/health`)
    console.log("‚úÖ Health Check OK:", healthResponse.data.status)
    console.log("")

    // Teste 2: P√°gina inicial
    console.log("2Ô∏è‚É£ Testando p√°gina inicial...")
    const homeResponse = await axios.get(`${API_URL}/`)
    console.log("‚úÖ P√°gina inicial OK:", homeResponse.data.message)
    console.log("")

    // Teste 3: Envio de notifica√ß√£o v√°lida
    console.log("3Ô∏è‚É£ Testando envio de notifica√ß√£o v√°lida...")
    const notificationResponse = await axios.post(`${API_URL}/nova-notificacao`, {
      mensagem: "Teste automatizado - Seu pedido foi confirmado!",
    })
    console.log("‚úÖ Notifica√ß√£o enviada:", notificationResponse.data.message)
    console.log("üìã Dados:", notificationResponse.data.data)
    console.log("")

    // Teste 4: Envio de m√∫ltiplas notifica√ß√µes
    console.log("4Ô∏è‚É£ Testando m√∫ltiplas notifica√ß√µes...")
    const mensagens = [
      "Pedido #001 confirmado!",
      "Produto enviado para entrega",
      "Avalie sua compra",
      "Promo√ß√£o especial dispon√≠vel!",
    ]

    for (let i = 0; i < mensagens.length; i++) {
      const response = await axios.post(`${API_URL}/nova-notificacao`, {
        mensagem: mensagens[i],
      })
      console.log(`‚úÖ Notifica√ß√£o ${i + 1}/4 enviada: ${mensagens[i]}`)

      // Aguardar 1 segundo entre envios
      await new Promise((resolve) => setTimeout(resolve, 1000))
    }
    console.log("")

    // Teste 5: Teste de valida√ß√£o (mensagem vazia)
    console.log("5Ô∏è‚É£ Testando valida√ß√£o (mensagem vazia)...")
    try {
      await axios.post(`${API_URL}/nova-notificacao`, {})
    } catch (error) {
      if (error.response && error.response.status === 400) {
        console.log("‚úÖ Valida√ß√£o funcionando:", error.response.data.error)
      } else {
        console.log("‚ùå Erro inesperado:", error.message)
      }
    }
    console.log("")

    console.log("üéâ Todos os testes conclu√≠dos com sucesso!")
    console.log("üëÄ Verifique o terminal do consumidor para ver as mensagens sendo processadas.")
  } catch (error) {
    console.error("‚ùå Erro durante os testes:", error.message)

    if (error.code === "ECONNREFUSED") {
      console.log("üí° Certifique-se de que a API est√° rodando: npm start")
    }
  }
}

// Executar testes
testAPI()
